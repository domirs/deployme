name: feature build & deploy & cleanup

on:
  push:
    branches: ["main"]
  pull_request:
    types: [opened, reopened, synchronize, closed]

concurrency:
  group: "feature-${{ github.event.pull_request.head.ref }}"
  cancel-in-progress: false

env:
  REGISTRY: default-route-openshift-image-registry.apps.sandbox-m2.ll9k.p1.openshiftapps.com/domigmail-dev
  IMAGE_NAME: deployme

jobs:
  set-vars:
    runs-on: ubuntu-latest
    outputs:
      ENV_NAME: ${{ steps.genEnvName.outputs.ENV_NAME }}
    steps:
      - name: Print GitHub context
        run: |
          echo "GitHub context:"
          echo "${{ toJson(github) }}"
      - id: genEnvName
        name: set env
        run: echo "ENV_NAME=${{ github.event.pull_request.head.ref || 'main' }}" | tr / - | tr '[:upper:]' '[:lower:]' >> $GITHUB_OUTPUT

  build:
    needs: [set-vars]
    runs-on: ubuntu-latest
    if: github.event.action != 'closed'
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: npm install
        run: npm ci

      - name: npm build
        run: npm run build

      - name: Login to Openshift Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.OPENSHIFT_USER }}
          password: ${{ secrets.OPENSHIFT_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.set-vars.outputs.ENV_NAME }}

  deployment:
    needs: [set-vars, build]
    runs-on: ubuntu-latest
    if: github.event.action != 'closed'
    environment:
      name: ${{ needs.set-vars.outputs.ENV_NAME }}
      url: https://${{ needs.set-vars.outputs.ENV_NAME }}-deployme-domigmail-dev.apps.sandbox-m2.ll9k.p1.openshiftapps.com
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login into openshift
        uses: ./.github/actions/oc-login
        with:
          namespace: ${{ env.OPENSHIFT_NAMESPACE }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}

      - name: deploy pr
        working-directory: deploy/deployme
        run: helm upgrade --install --set-string image.tag=${{ needs.set-vars.outputs.ENV_NAME }} ${{ needs.set-vars.outputs.ENV_NAME }} ./

  cleanup:
    needs: [set-vars]
    runs-on: ubuntu-latest
    if: github.event.action == 'closed'
    environment:
      name: ${{ needs.set-vars.outputs.ENV_NAME }}
      url: https://${{ needs.set-vars.outputs.ENV_NAME }}-deployme-domigmail-dev.apps.sandbox-m2.ll9k.p1.openshiftapps.com
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login into openshift
        uses: ./.github/actions/oc-login
        with:
          namespace: ${{ env.OPENSHIFT_NAMESPACE }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}

      - name: uninstall pr
        working-directory: deploy/deployme
        run: helm uninstall ${{ needs.set-vars.outputs.ENV_NAME }}
